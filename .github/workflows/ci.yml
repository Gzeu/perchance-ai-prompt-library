name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v6
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    # Ensure lockfile is consistent with package.json
    - name: Validate lockfile
      run: |
        if ! npm ci --dry-run > /dev/null 2>&1; then
          echo "Lock file is out of sync with package.json. Regenerating..."
          rm -f package-lock.json
          npm install --package-lock-only
        fi
    
    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit
    
    - name: Clean previous builds
      run: npm run clean --if-present
    
    - name: Validate package structure
      run: npm run validate --if-present
    
    - name: Run linting
      run: npm run lint --if-present
    
    - name: Type checking
      run: npm run type-check --if-present
    
    - name: Run tests
      run: npm test
    
    - name: Test CLI functionality
      run: npm run test:cli
    
    - name: Install web dependencies
      run: |
        cd web
        npm ci --prefer-offline --no-audit
    
    - name: Build web interface
      run: |
        cd web
        npm run build
    
    - name: Test global installation
      run: |
        npm pack
        npm install -g ./perchance-ai-prompt-library-*.tgz
        perchance-prompts --version
        pai --version
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '20.x'
        cache: 'npm'
    
    # Fix lockfile sync issues for security job
    - name: Validate lockfile
      run: |
        if ! npm ci --dry-run > /dev/null 2>&1; then
          echo "Lock file is out of sync with package.json. Regenerating..."
          rm -f package-lock.json
          npm install --package-lock-only
        fi
    
    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit
    
    - name: Clean previous builds
      run: npm run clean --if-present
    
    - name: Run security audit
      run: npm audit --audit-level moderate || true
    
    - name: Check for high vulnerabilities
      run: npm audit --audit-level high || true
    
    - name: Security scan
      run: npm run security --if-present

  build:
    needs: [test, security]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Validate lockfile
      run: |
        if ! npm ci --dry-run > /dev/null 2>&1; then
          echo "Lock file is out of sync with package.json. Regenerating..."
          rm -f package-lock.json
          npm install --package-lock-only
        fi
    
    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit
    
    - name: Clean previous builds
      run: npm run clean --if-present
    
    - name: Build package
      run: npm run build --if-present
    
    - name: Package for distribution
      run: npm pack
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v5
      with:
        name: package-${{ github.sha }}
        path: '*.tgz'
        retention-days: 30

  publish:
    needs: [test, security, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip publish]')
    
    permissions:
      contents: read
      id-token: write  # Required for OIDC authentication
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Validate lockfile
      run: |
        if ! npm ci --dry-run > /dev/null 2>&1; then
          echo "Lock file is out of sync with package.json. Regenerating..."
          rm -f package-lock.json
          npm install --package-lock-only
        fi
    
    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit
    
    - name: Clean previous builds
      run: npm run clean --if-present
    
    - name: Run pre-publish validation
      run: npm run prepublishOnly
    
    - name: Publish to NPM
      run: npm publish --access public --provenance
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  monitor:
    needs: [publish]
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v6
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit
    
    - name: Health check
      run: npm run health-check --if-present
    
    - name: Performance monitoring
      run: npm run monitor --if-present