version: '3.8'

services:
  perchance-ai:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=info
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./.env:/app/.env:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.perchance.rule=Host(`localhost`)"
      - "traefik.http.services.perchance.loadbalancer.server.port=3000"

  perchance-dev:
    profiles: ["development"]
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - LOG_LEVEL=debug
      - DEBUG=perchance:*
    volumes:
      - .:/app
      - /app/node_modules
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    command: dumb-init npm run dev

  nginx:
    profiles: ["production"]
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - perchance-ai
    restart: unless-stopped

volumes:
  data:
  logs:

networks:
  default:
    driver: bridge